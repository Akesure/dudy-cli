import React, {Component} from 'react'
import ReactDOM from 'react-dom'

import Screens from "screen"
import {AppContainer} from 'container'

import {
  HashRouter as Router,
  Route,
  Link
} from 'react-router-dom'

import {get_current_path} from 'helper'
import {init_store} from 'store'
import {Provider} from 'react-redux'
import "../global.js"


// 允许TouchTap事件
// TouchaTap事件模拟的onTouchTap替代onClick可以让移动端相应更加快
var injectTapEventPlugin = require("react-tap-event-plugin");
injectTapEventPlugin()

// redbox 用于报错
import RedBox from 'redbox-react'


// 样式文件引入
import "style/demo.less"
import "style/demo.css"
import "style/demo.styl"
import "style/demo.scss"
import "style/demo.sass"
try{
  const Layout = ({children}) => {
    return <div>
      {children}
    </div>
  }


  class App extends Component{

    constructor(){
      super()
      this.state = { store : null }
    }

    componentWillMount(){

      init_store().then(store => {
        this.setState({
          store

        })
      })
    }

    render() {
      if(!this.state.store) {return null}
      return <Provider store={this.state.store}>
        <Router>
          <Route path='/' >
            <Layout>
               <Route exact path="/" component={Screens.Test} />
               <Route path="/demo" component={Screens.Demo} />
            </Layout>
          </Route>
        </Router>
      </Provider>

    }
  }


  ReactDOM.render(
    <App />,
    document.getElementById("app"))
}catch(e) {
  if(! (e instanceof Error ) ){
    e = new Error(e)
  }
  ReactDOM.render(
    <RedBox error={e} />,
    document.getElementById("app"))
}


// 对全局异常的监控
window.onerror = function(msg, url, line, col, error){
  let extra = !col ? '' : '\ncolumn: ' + col
  extra += !error ? '' : '\nerror: ' + error
  const e = new Error("Error: " + msg + "\nurl: " + url + "\nline: " + line + extra)
  ReactDOM.render(
    <RedBox error={e} />,
    document.getElementById("app"))

}